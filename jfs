#!/usr/bin/env bash

set -e
set -o nounset
set -o pipefail
IFS=$'\n\t'

_ME="${0##*/}"
_VERSION="0.0.1"
_HOMEPAGE="https://github.com/tg-z/jfs"

[ -z "${EDITOR}" ] && EDITOR="vim"

if [[ -n "${JUSTFILE_DIR}" ]]; then
  JUSTFILE_DIR="${HOME}/.local/share/justfiles"
else
  mkdir -p "${JUSTFILE_DIR}"
fi

# if [ -z "${1}" ]; then
# 	_help
# else
# 	terminal-notifier -message "you said: " "${1}"
# fi

_info() {
    # $*: info message
    printf "%b\n" "\033[32mINFO\033[0m ${*}" >&2
}

_warn() {
    # $*: warning message
    printf "%b\n" "\033[33mWARNING\033[0m ${*}" >&2
}

_error() {
    # $*: error message
    printf "%b\n" "\033[31mERROR\033[0m ${*}" >&2
    exit 1
}

_var() {
  _just="$(command -v just)"
  _fzf="$(command -v fzf)"
  _ag="$(command -v ag)"
  _fd="$(command -v fd)"
  _bat="$(command -v bat)"
}

_check() {
  _var
  if [ ! -x "${_just}" ]; then
	  echo "you must install just to run this command"
	  exit 1
  fi
  if [ ! -x "${_fzf}" ]; then
	  echo "you must install fzf to run this command"
	  exit 1
  fi
  if [ ! -x "${_ag}" ]; then
      echo "you must install ag to run this command"
      exit 1
  fi
  if [ ! -x "${_fd}" ]; then
	  echo "you must install fd to run this command"
	  exit 1
  fi
  if [ ! -x "${_bat}" ]; then
	  echo "you must install bat to run this command"
	  exit 1
  fi
}

_copy() {
  if [ -x "$(command -v xclip)" ]; then
    echo "${1}" | xclip -selection c
  fi

  if [ -x "$(command -v pbcopy)" ]; then
    echo "${1}" | pbcopy
  fi
}

list() {
  _check
  cd "${JUSTFILE_DIR}"
  local _files
  _files="$("${_fd}" -i -H -t f --color=never)"
  printf "%s\n" "${_files}"
}

preview() {
  _check
  cd "${JUSTFILE_DIR}"
  local _files
  _files="$("${_fd}" -i -H -t f --color=never | "${_fzf}")"
}

_global() {
  _check
  local _list
  _list="$("${_fd}" justfile '/Users' -i -H -t f --maxdepth 8)"
  printf "%s\n" "${_list}"
}

_generate(){
  _check
  cd "${JUSTFILE_DIR}"
  local _content
  read -r -d '' _content <<TEMPLATE || true
#!/usr/bin/env just --justfile

set shell := ["zsh", "-cu"]
alias ls := list
cwd := `pwd`

# just
default:
    @just -u --list

# just list
list:
    @fd -i -H -t f --color=never

TEMPLATE

  printf "creating new justfile in %s\\n" "${JUSTFILE_DIR}"
  printf "%s\\n" "${_content}" >> "${_name}"
  exit 0
}

new() {
  cd "${JUSTFILE_DIR}"
  local _name
  if [[ "$#" -gt 0 ]]; then
	  _name="new_justfile"
	  name="$(echo "${_name}" | tr ' ' '_' | tr '[:upper:]' '[:lower:]')"
  else
	  name="justfile_$(date -I)"
  fi

  if [[ -f "${name}" ]]; then
	  _error "already exists in this location.\n"
	  exit 0
  fi

  touch "${name}"

  _generate "${1}"
}

find() {
  _check
  local files="${1}"
  local results
  results="$("${_ag}" -rg "${files}" "${JUSTFILE_DIR}")"

  echo "${results}"
}

_banner() {
  cat <<EOF
 __   ___        
 |__|.'  _|.-----.
 |  ||   _||__ --|
 |  ||__|  |_____|
|___|             

EOF
}

_commands() {
  cat <<EOF
Available commands:
  commands
  find
  global
  list
  help
  new
  preview
  version
EOF
}

help() {
  _banner
  cat <<EOF
${_ME} - a tool for just dealing with your justfiles.

Usage:
  ${_ME} <cmd> <opts> args
Options:
  -h 	Display this help information.
  -V 	Display version information and exit.
Home:
  ${_HOMEPAGE}
Help:
  ${_ME} help
EOF
_commands
}

version() {
  printf "%s %s\n" "${_ME}" "${_VERSION}"
}

while getopts 'hV' option; do
	case "${option}" in
		h)
			shift
			help
			exit 0
			;;
		V)
			shift
			version
			exit 0
			;;
		*)
			_error "command not found" >&2
			false
			;;
	esac
done

case "${1:-help}" in
	("commands")
		shift
		_commands
		;;
	("find")
		shift
		find "${1}"
		;;
	("global")
		shift
		_global
		;;
	("list")
		shift
		list
		;;
	("help")
		shift
		help
		;;
	("new")
		shift
		new "${@}"
		;;
	("preview")
		shift
		preview
		;;
	("version")
		shift
		version
		;;
	*)
		_error "command not found" >&2
		false
		;;
esac

# ju() {
# if [ -z "${JUSTFILES_DIR}" ]
# then
# 	printf "%s" "you must set a directory for your justfiles\n"
# 	false
# else
# just -d "${JUSTFILE_DIR}" -f "${JUSTFILE_DIR}/justfile"
# just -f ~/.local/share/justfiles/justfile -d ~/.local/share/justfiles
#}
